colnames(new_entry) <- c("Kanton","Vorlage_ID","Vorlage_d","Vorlage_f","Vorlage_i")
kantonale_vorlagen_list <- rbind(kantonale_vorlagen_list,new_entry)
}
}
#Daten Speichern
kantonale_vorlagen_list <- kantonale_vorlagen_list[-1,]
library(xlsx)
write.xlsx(kantonale_vorlagen_list,"./Data/kantonale_vorlagen_list.xlsx",row.names = FALSE)
vorlagen_short
#Kurznamen Vorlagen (Verwendet im File mit den Textbausteinen)
vorlagen_short <- excel_sheets[2:5]
vorlagen_short
###Anzahl, Name und Nummer der Vorlagen von JSON einlesen
vorlagen
##Deutsch
vorlagen <- get_vorlagen(json_data,"de")
vorlagen$text[1] <- Vorlagen_Titel$Vorlage_d[1]
vorlagen$text[2] <- Vorlagen_Titel$Vorlage_d[2]
###Anzahl, Name und Nummer der Vorlagen von JSON einlesen
vorlagen
#repeat{
MAIN_PATH <- "C:/Users/sw/OneDrive/LENA_Project/20240609_LENA_Abstimmungen"
#Working Directory definieren
setwd(MAIN_PATH)
###Funktionen laden
source("./Funktionen/functions_readin.R", encoding = "UTF-8")
source("./Funktionen/functions_storyfinder.R", encoding = "UTF-8")
source("./Funktionen/functions_storybuilder.R", encoding = "UTF-8")
source("./Funktionen/functions_output.R", encoding = "UTF-8")
source("./tools/Funktionen/Utils.R", encoding = "UTF-8")
#Bibliotheken laden
library(dplyr)
library(tidyr)
library(purrr)
library(readr)
library(ggplot2)
library(stringr)
library(stringi)
library(xml2)
library(rjson)
library(jsonlite)
library(readxl)
library(git2r)
library(DatawRappr)
library(lubridate)
library(httr)
cat("Benoetigte Bibliotheken geladen\n")
#Welche Abstimmung?
abstimmung_date <- "Juni2024"
#Mail
#DEFAULT_MAILS <- "contentdevelopment@keystone-sda.ch, robot-notification@awp.ch"
DEFAULT_MAILS <- "robot-notification@awp.ch"
res <- GET("https://app-prod-static-voteinfo.s3.eu-central-1.amazonaws.com/v1/ogd/sd-t-17-02-20240609-eidgAbstimmung.json")
json_data <- fromJSON(rawToChar(res$content), flatten = TRUE)
res <- GET("https://app-prod-static-voteinfo.s3.eu-central-1.amazonaws.com/v1/ogd/sd-t-17-02-20240609-kantAbstimmung.json")
json_data_kantone <- fromJSON(rawToChar(res$content), flatten = TRUE)
cat("Aktuelle Abstimmungsdaten geladen\n")
excel_sheets <- excel_sheets(paste0("Texte/Textbausteine_LENA_",abstimmung_date,".xlsx"))
#Kurznamen Vorlagen (Verwendet im File mit den Textbausteinen)
vorlagen_short <- excel_sheets[2:5]
kantonal_short <- excel_sheets[c(6,8:12)]
###Kurznamen und Nummern kantonale Vorlagen Spezialfaelle
kantonal_short_special <- excel_sheets[c(7)]
#Bibliotheken laden
library(dplyr)
library(tidyr)
library(purrr)
library(readr)
library(ggplot2)
library(stringr)
library(stringi)
library(xml2)
library(rjson)
library(jsonlite)
library(readxl)
library(git2r)
library(DatawRappr)
library(lubridate)
library(httr)
cat("Benoetigte Bibliotheken geladen\n")
#Welche Abstimmung?
abstimmung_date <- "Juni2024"
#Mail
#DEFAULT_MAILS <- "contentdevelopment@keystone-sda.ch, robot-notification@awp.ch"
DEFAULT_MAILS <- "robot-notification@awp.ch"
res <- GET("https://app-prod-static-voteinfo.s3.eu-central-1.amazonaws.com/v1/ogd/sd-t-17-02-20240609-eidgAbstimmung.json")
json_data <- fromJSON(rawToChar(res$content), flatten = TRUE)
res <- GET("https://app-prod-static-voteinfo.s3.eu-central-1.amazonaws.com/v1/ogd/sd-t-17-02-20240609-kantAbstimmung.json")
json_data_kantone <- fromJSON(rawToChar(res$content), flatten = TRUE)
cat("Aktuelle Abstimmungsdaten geladen\n")
excel_sheets <- excel_sheets(paste0("Texte/Textbausteine_LENA_",abstimmung_date,".xlsx"))
#Kurznamen Vorlagen (Verwendet im File mit den Textbausteinen)
vorlagen_short <- excel_sheets[2:5]
###Kurznamen und Nummern kantonale Vorlagen
kantonal_short <- excel_sheets[c(6,8:12)]
#Bibliotheken laden
library(dplyr)
library(tidyr)
library(purrr)
library(readr)
library(ggplot2)
library(stringr)
library(stringi)
library(xml2)
library(rjson)
library(jsonlite)
library(readxl)
library(git2r)
library(DatawRappr)
library(lubridate)
library(httr)
cat("Benoetigte Bibliotheken geladen\n")
#Welche Abstimmung?
abstimmung_date <- "Juni2024"
#Mail
#DEFAULT_MAILS <- "contentdevelopment@keystone-sda.ch, robot-notification@awp.ch"
DEFAULT_MAILS <- "robot-notification@awp.ch"
res <- GET("https://app-prod-static-voteinfo.s3.eu-central-1.amazonaws.com/v1/ogd/sd-t-17-02-20240609-eidgAbstimmung.json")
json_data <- fromJSON(rawToChar(res$content), flatten = TRUE)
res <- GET("https://app-prod-static-voteinfo.s3.eu-central-1.amazonaws.com/v1/ogd/sd-t-17-02-20240609-kantAbstimmung.json")
json_data_kantone <- fromJSON(rawToChar(res$content), flatten = TRUE)
cat("Aktuelle Abstimmungsdaten geladen\n")
excel_sheets <- excel_sheets(paste0("Texte/Textbausteine_LENA_",abstimmung_date,".xlsx"))
#Kurznamen Vorlagen (Verwendet im File mit den Textbausteinen)
vorlagen_short <- excel_sheets[2:5]
###Kurznamen und Nummern kantonale Vorlagen
kantonal_short <- excel_sheets[c(6,8:12)]
###Kurznamen und Nummern kantonale Vorlagen Spezialfaelle
kantonal_short_special <- excel_sheets[c(7)]
View(json_data_kantone)
#Kantonale Vorlagen Titel
Vorlagen_Titel <- as.data.frame(read_excel(paste0("Texte/Textbausteine_LENA_",abstimmung_date,".xlsx"),
sheet = "Vorlagen_Uebersicht"))
View(Vorlagen_Titel)
kantonal_short
json_data_kantone[["kantone"]][["geoLevelname"]]
#Bibliotheken laden
library(dplyr)
library(tidyr)
library(purrr)
library(readr)
library(ggplot2)
library(stringr)
library(stringi)
library(xml2)
library(rjson)
library(jsonlite)
library(readxl)
library(git2r)
library(DatawRappr)
library(lubridate)
library(httr)
cat("Benoetigte Bibliotheken geladen\n")
#Welche Abstimmung?
abstimmung_date <- "Juni2024"
#Mail
#DEFAULT_MAILS <- "contentdevelopment@keystone-sda.ch, robot-notification@awp.ch"
DEFAULT_MAILS <- "robot-notification@awp.ch"
res <- GET("https://app-prod-static-voteinfo.s3.eu-central-1.amazonaws.com/v1/ogd/sd-t-17-02-20240609-eidgAbstimmung.json")
json_data <- fromJSON(rawToChar(res$content), flatten = TRUE)
res <- GET("https://app-prod-static-voteinfo.s3.eu-central-1.amazonaws.com/v1/ogd/sd-t-17-02-20240609-kantAbstimmung.json")
json_data_kantone <- fromJSON(rawToChar(res$content), flatten = TRUE)
cat("Aktuelle Abstimmungsdaten geladen\n")
excel_sheets <- excel_sheets(paste0("Texte/Textbausteine_LENA_",abstimmung_date,".xlsx"))
#Kurznamen Vorlagen (Verwendet im File mit den Textbausteinen)
vorlagen_short <- excel_sheets[2:5]
###Kurznamen und Nummern kantonale Vorlagen
kantonal_short <- excel_sheets[c(6,8:12)]
#Nummer in JSON
kantonal_number <- c(1,3,8,8,8,8)
#Falls mehrere Vorlagen innerhalb eines Kantons, Vorlage auswaehlen
kantonal_add <- c(6,4,1,2,3,4)
###Kurznamen und Nummern kantonale Vorlagen Spezialfaelle
kantonal_short_special <- excel_sheets[c(7)]
#Nummer in JSON
kantonal_number_special <- c(3)
#Falls mehrere Vorlagen innerhalb eines Kantons, Vorlage auswaehlen
kantonal_add_special <- c(1)
#Spezialfälle
other_check <- FALSE
#Kantonale Vorlagen Titel
Vorlagen_Titel <- as.data.frame(read_excel(paste0("Texte/Textbausteine_LENA_",abstimmung_date,".xlsx"),
sheet = "Vorlagen_Uebersicht"))
###Anzahl, Name und Nummer der Vorlagen von JSON einlesen
##Deutsch
vorlagen <- get_vorlagen(json_data,"de")
#repeat{
MAIN_PATH <- "C:/Users/sw/OneDrive/LENA_Project/20240609_LENA_Abstimmungen"
#Working Directory definieren
setwd(MAIN_PATH)
###Funktionen laden
source("./Funktionen/functions_readin.R", encoding = "UTF-8")
source("./Funktionen/functions_storyfinder.R", encoding = "UTF-8")
source("./Funktionen/functions_storybuilder.R", encoding = "UTF-8")
source("./Funktionen/functions_output.R", encoding = "UTF-8")
source("./tools/Funktionen/Utils.R", encoding = "UTF-8")
###Config: Bibliotheken laden, Pfade/Links definieren, bereits vorhandene Daten laden
source("CONFIG.R",encoding = "UTF-8")
#Bibliotheken laden
library(dplyr)
library(tidyr)
library(purrr)
library(readr)
library(ggplot2)
library(stringr)
library(stringi)
library(xml2)
library(rjson)
library(jsonlite)
library(readxl)
library(git2r)
library(DatawRappr)
library(lubridate)
library(httr)
cat("Benoetigte Bibliotheken geladen\n")
#Welche Abstimmung?
abstimmung_date <- "Juni2024"
#Mail
#DEFAULT_MAILS <- "contentdevelopment@keystone-sda.ch, robot-notification@awp.ch"
DEFAULT_MAILS <- "robot-notification@awp.ch"
res <- GET("https://app-prod-static-voteinfo.s3.eu-central-1.amazonaws.com/v1/ogd/sd-t-17-02-20240609-eidgAbstimmung.json")
json_data <- fromJSON(rawToChar(res$content), flatten = TRUE)
res <- GET("https://app-prod-static-voteinfo.s3.eu-central-1.amazonaws.com/v1/ogd/sd-t-17-02-20240609-kantAbstimmung.json")
json_data_kantone <- fromJSON(rawToChar(res$content), flatten = TRUE)
cat("Aktuelle Abstimmungsdaten geladen\n")
excel_sheets <- excel_sheets(paste0("Texte/Textbausteine_LENA_",abstimmung_date,".xlsx"))
#Kurznamen Vorlagen (Verwendet im File mit den Textbausteinen)
vorlagen_short <- excel_sheets[2:5]
###Kurznamen und Nummern kantonale Vorlagen
kantonal_short <- excel_sheets[c(6,8:12)]
#Nummer in JSON
kantonal_number <- c(1,3,8,8,8,8)
#Falls mehrere Vorlagen innerhalb eines Kantons, Vorlage auswaehlen
kantonal_add <- c(6,4,1,2,3,4)
###Kurznamen und Nummern kantonale Vorlagen Spezialfaelle
kantonal_short_special <- excel_sheets[c(7)]
#Nummer in JSON
kantonal_number_special <- c(3)
#Falls mehrere Vorlagen innerhalb eines Kantons, Vorlage auswaehlen
kantonal_add_special <- c(1)
#Spezialfälle
other_check <- FALSE
#Kantonale Vorlagen Titel
Vorlagen_Titel <- as.data.frame(read_excel(paste0("Texte/Textbausteine_LENA_",abstimmung_date,".xlsx"),
sheet = "Vorlagen_Uebersicht"))
###Anzahl, Name und Nummer der Vorlagen von JSON einlesen
##Deutsch
vorlagen <- get_vorlagen(json_data,"de")
vorlagen$text[1] <- Vorlagen_Titel$Vorlage_d[1]
vorlagen$text[2] <- Vorlagen_Titel$Vorlage_d[2]
#Französisch
vorlagen_fr <- get_vorlagen(json_data,"fr")
vorlagen_fr$text[1] <- Vorlagen_Titel$Vorlage_f[1]
vorlagen_fr$text[2] <- Vorlagen_Titel$Vorlage_f[2]
#Italienisch
vorlagen_it <- get_vorlagen(json_data,"it")
vorlagen_it$text[1] <- Vorlagen_Titel$Vorlage_i[1]
vorlagen_it$text[2] <- Vorlagen_Titel$Vorlage_i[2]
vorlagen
nrow(vorlage)
nrow(vorlagen)
##Deutsch
vorlagen <- get_vorlagen(json_data,"de")
for (v in 1:nrow(vorlagen)) {
vorlagen$text[v] <- Vorlagen_Titel$Vorlage_d[v]
}
#Französisch
vorlagen_fr <- get_vorlagen(json_data,"fr")
for (v in 1:nrow(vorlagen_fr)) {
vorlagen_fr$text[v] <- Vorlagen_Titel$Vorlage_f[v]
}
#Italienisch
vorlagen_it <- get_vorlagen(json_data,"it")
for (v in 1:nrow(vorlagen_it)) {
vorlagen_it$text[v] <- Vorlagen_Titel$Vorlage_i[v]
}
vorlagen
vorlagen_fr
#Bibliotheken laden
library(dplyr)
library(tidyr)
library(purrr)
library(readr)
library(ggplot2)
library(stringr)
library(stringi)
library(xml2)
library(rjson)
library(jsonlite)
library(readxl)
library(git2r)
library(DatawRappr)
library(lubridate)
library(httr)
cat("Benoetigte Bibliotheken geladen\n")
#Welche Abstimmung?
abstimmung_date <- "Juni2024"
#Mail
#DEFAULT_MAILS <- "contentdevelopment@keystone-sda.ch, robot-notification@awp.ch"
DEFAULT_MAILS <- "robot-notification@awp.ch"
res <- GET("https://app-prod-static-voteinfo.s3.eu-central-1.amazonaws.com/v1/ogd/sd-t-17-02-20240609-eidgAbstimmung.json")
json_data <- fromJSON(rawToChar(res$content), flatten = TRUE)
res <- GET("https://app-prod-static-voteinfo.s3.eu-central-1.amazonaws.com/v1/ogd/sd-t-17-02-20240609-kantAbstimmung.json")
json_data_kantone <- fromJSON(rawToChar(res$content), flatten = TRUE)
cat("Aktuelle Abstimmungsdaten geladen\n")
excel_sheets <- excel_sheets(paste0("Texte/Textbausteine_LENA_",abstimmung_date,".xlsx"))
###Anzahl, Name und Nummer der Vorlagen von JSON einlesen
##Deutsch
vorlagen <- get_vorlagen(json_data,"de")
for (v in 1:nrow(vorlagen)) {
vorlagen$text[v] <- Vorlagen_Titel$Vorlage_d[v]
}
#Französisch
vorlagen_fr <- get_vorlagen(json_data,"fr")
for (v in 1:nrow(vorlagen_fr)) {
vorlagen_fr$text[v] <- Vorlagen_Titel$Vorlage_f[v]
}
#Italienisch
vorlagen_it <- get_vorlagen(json_data,"it")
for (v in 1:nrow(vorlagen_it)) {
vorlagen_it$text[v] <- Vorlagen_Titel$Vorlage_i[v]
}
#Kurznamen Vorlagen (Verwendet im File mit den Textbausteinen)
vorlagen_short <- excel_sheets[2:(nrow(vorlagen)+1)]
vorlagen_short
#repeat{
MAIN_PATH <- "C:/Users/sw/OneDrive/LENA_Project/20240609_LENA_Abstimmungen"
#Working Directory definieren
setwd(MAIN_PATH)
###Funktionen laden
source("./Funktionen/functions_readin.R", encoding = "UTF-8")
source("./Funktionen/functions_storyfinder.R", encoding = "UTF-8")
source("./Funktionen/functions_storybuilder.R", encoding = "UTF-8")
source("./Funktionen/functions_output.R", encoding = "UTF-8")
source("./tools/Funktionen/Utils.R", encoding = "UTF-8")
###Config: Bibliotheken laden, Pfade/Links definieren, bereits vorhandene Daten laden
source("CONFIG.R",encoding = "UTF-8")
#repeat{
MAIN_PATH <- "C:/Users/sw/OneDrive/LENA_Project/20240609_LENA_Abstimmungen"
#Working Directory definieren
setwd(MAIN_PATH)
###Funktionen laden
source("./Funktionen/functions_readin.R", encoding = "UTF-8")
source("./Funktionen/functions_storyfinder.R", encoding = "UTF-8")
source("./Funktionen/functions_storybuilder.R", encoding = "UTF-8")
source("./Funktionen/functions_output.R", encoding = "UTF-8")
source("./tools/Funktionen/Utils.R", encoding = "UTF-8")
###Config: Bibliotheken laden, Pfade/Links definieren, bereits vorhandene Daten laden
source("CONFIG.R",encoding = "UTF-8")
#Simulate Data (if needed)
simulation <- FALSE
if (simulation == TRUE) {
source("./Simulation/data_simulation.R")
}
#Aktualisierungs-Check: Gibt es neue Daten?
timestamp_national <- read.csv("./Timestamp/timestamp_national.txt",header=FALSE)[1,1]
timestamp_kantonal <- read.csv("./Timestamp/timestamp_kantonal.txt",header=FALSE)[1,1]
time_check_national <- timestamp_national == json_data$timestamp
time_check_kantonal <- timestamp_kantonal == json_data_kantone$timestamp
#Working Directory definieren
setwd("C:/Users/sw/OneDrive/LENA_Project/20240609_LENA_Abstimmungen")
###Config: Bibliotheken laden, Pfade/Links definieren, bereits vorhandene Daten laden
source("CONFIG.R",encoding = "UTF-8")
###Funktionen laden
source("./Funktionen/functions_readin.R", encoding = "UTF-8")
source("./Funktionen/functions_storyfinder.R", encoding = "UTF-8")
source("./Funktionen/functions_storybuilder.R", encoding = "UTF-8")
source("./Funktionen/functions_output.R", encoding = "UTF-8")
sprachen <- c("de","fr","it")
monate_de <- c("Januar", "Februar", "März",
"April", "Mai", "Juni", "July",
"August", "September", "Oktober",
"November", "Dezember")
monate_fr <- c("janvier","février","mars",
"avril","mai","juin","juillet",
"août","septembre","octobre",
"novembre","décembre")
monate_it <- c("gennaio","febbraio","marzo",
"aprile","maggio","giugno",
"luglio","agosto","settembre",
"ottobre","novembre","dicembre")
#Ids von Karten-Vorlagen
vorlagen_uebersicht <- c("O1i9P","Ocame","ot8Mm")
vorlagen_gemeinden <- c("EuC56","JJ03i","CPwql")
vorlagen_kantone <- c("HH2Hs","G7A2k","sobvY")
vorlagen_all <- rbind(vorlagen,vorlagen_fr)
vorlagen_all <- rbind(vorlagen_all,vorlagen_it)
View(vorlagen_all)
kantonal_short_special
length(kantonal_short_special)
if (length(kantonal_short_special) > 0) {
kantonal_short <- c(kantonal_short,kantonal_short_special)
kantonal_number <- c(kantonal_number,kantonal_number_special)
kantonal_add <- c(kantonal_add,kantonal_add_special)
}
#repeat{
MAIN_PATH <- "C:/Users/sw/OneDrive/LENA_Project/20240609_LENA_Abstimmungen"
#Working Directory definieren
setwd(MAIN_PATH)
###Funktionen laden
source("./Funktionen/functions_readin.R", encoding = "UTF-8")
source("./Funktionen/functions_storyfinder.R", encoding = "UTF-8")
source("./Funktionen/functions_storybuilder.R", encoding = "UTF-8")
source("./Funktionen/functions_output.R", encoding = "UTF-8")
source("./tools/Funktionen/Utils.R", encoding = "UTF-8")
#Bibliotheken laden
library(dplyr)
library(tidyr)
library(purrr)
library(readr)
library(ggplot2)
library(stringr)
library(stringi)
library(xml2)
library(rjson)
library(jsonlite)
library(readxl)
library(git2r)
library(DatawRappr)
library(lubridate)
library(httr)
cat("Benoetigte Bibliotheken geladen\n")
#Welche Abstimmung?
abstimmung_date <- "Juni2024"
#Mail
#DEFAULT_MAILS <- "contentdevelopment@keystone-sda.ch, robot-notification@awp.ch"
DEFAULT_MAILS <- "robot-notification@awp.ch"
res <- GET("https://app-prod-static-voteinfo.s3.eu-central-1.amazonaws.com/v1/ogd/sd-t-17-02-20240609-eidgAbstimmung.json")
json_data <- fromJSON(rawToChar(res$content), flatten = TRUE)
res <- GET("https://app-prod-static-voteinfo.s3.eu-central-1.amazonaws.com/v1/ogd/sd-t-17-02-20240609-kantAbstimmung.json")
json_data_kantone <- fromJSON(rawToChar(res$content), flatten = TRUE)
cat("Aktuelle Abstimmungsdaten geladen\n")
excel_sheets <- excel_sheets(paste0("Texte/Textbausteine_LENA_",abstimmung_date,".xlsx"))
#Kantonale Vorlagen Titel
Vorlagen_Titel <- as.data.frame(read_excel(paste0("Texte/Textbausteine_LENA_",abstimmung_date,".xlsx"),
sheet = "Vorlagen_Uebersicht"))
View(json_data_kantone)
completed_cantons <- readRDS("C:/Users/sw/OneDrive/LENA_Project/20240609_LENA_Abstimmungen/completed_cantons.RDS")
#repeat{
MAIN_PATH <- "C:/Users/sw/OneDrive/LENA_Project/20240609_LENA_Abstimmungen"
#Working Directory definieren
setwd(MAIN_PATH)
###Funktionen laden
source("./Funktionen/functions_readin.R", encoding = "UTF-8")
source("./Funktionen/functions_storyfinder.R", encoding = "UTF-8")
source("./Funktionen/functions_storybuilder.R", encoding = "UTF-8")
source("./Funktionen/functions_output.R", encoding = "UTF-8")
source("./tools/Funktionen/Utils.R", encoding = "UTF-8")
###Config: Bibliotheken laden, Pfade/Links definieren, bereits vorhandene Daten laden
source("CONFIG.R",encoding = "UTF-8")
#repeat{
MAIN_PATH <- "C:/Users/sw/OneDrive/LENA_Project/20240609_LENA_Abstimmungen"
#Working Directory definieren
setwd(MAIN_PATH)
###Funktionen laden
source("./Funktionen/functions_readin.R", encoding = "UTF-8")
source("./Funktionen/functions_storyfinder.R", encoding = "UTF-8")
source("./Funktionen/functions_storybuilder.R", encoding = "UTF-8")
source("./Funktionen/functions_output.R", encoding = "UTF-8")
source("./tools/Funktionen/Utils.R", encoding = "UTF-8")
###Config: Bibliotheken laden, Pfade/Links definieren, bereits vorhandene Daten laden
source("CONFIG.R",encoding = "UTF-8")
###Kurznamen und Nummern kantonale Vorlagen
kantonal_short <- excel_sheets[c(6,8:12)]
kantonal_short
#repeat{
MAIN_PATH <- "C:/Users/sw/OneDrive/LENA_Project/20240609_LENA_Abstimmungen"
#Working Directory definieren
setwd(MAIN_PATH)
###Funktionen laden
source("./Funktionen/functions_readin.R", encoding = "UTF-8")
source("./Funktionen/functions_storyfinder.R", encoding = "UTF-8")
source("./Funktionen/functions_storybuilder.R", encoding = "UTF-8")
source("./Funktionen/functions_output.R", encoding = "UTF-8")
source("./tools/Funktionen/Utils.R", encoding = "UTF-8")
###Config: Bibliotheken laden, Pfade/Links definieren, bereits vorhandene Daten laden
source("CONFIG.R",encoding = "UTF-8")
#Working Directory definieren
setwd("C:/Users/sw/OneDrive/LENA_Project/20240609_LENA_Abstimmungen")
###Config: Bibliotheken laden, Pfade/Links definieren, bereits vorhandene Daten laden
source("CONFIG.R",encoding = "UTF-8")
###Funktionen laden
source("./Funktionen/functions_readin.R", encoding = "UTF-8")
source("./Funktionen/functions_storyfinder.R", encoding = "UTF-8")
source("./Funktionen/functions_storybuilder.R", encoding = "UTF-8")
source("./Funktionen/functions_output.R", encoding = "UTF-8")
sprachen <- c("de","fr","it")
monate_de <- c("Januar", "Februar", "März",
"April", "Mai", "Juni", "July",
"August", "September", "Oktober",
"November", "Dezember")
monate_fr <- c("janvier","février","mars",
"avril","mai","juin","juillet",
"août","septembre","octobre",
"novembre","décembre")
monate_it <- c("gennaio","febbraio","marzo",
"aprile","maggio","giugno",
"luglio","agosto","settembre",
"ottobre","novembre","dicembre")
#Ids von Karten-Vorlagen
vorlagen_uebersicht <- c("O1i9P","Ocame","ot8Mm")
vorlagen_gemeinden <- c("EuC56","JJ03i","CPwql")
vorlagen_kantone <- c("HH2Hs","G7A2k","sobvY")
#Titel aktuelle Vorlagen
vorlagen_all <- rbind(vorlagen,vorlagen_fr)
vorlagen_all <- rbind(vorlagen_all,vorlagen_it)
View(vorlagen_all)
#Ordnerstruktur erstellen
team_id <- "6Gn1afus"
date_voting <- as.Date(json_data$abstimmtag,format="%Y%m%d")
main_folder <- dw_create_folder(name=paste0("Abstimmung ",day(date_voting),". ",monate_de[month(date_voting)]," ",year(date_voting)),organization_id = team_id)
usethis::edit_r_environ()
